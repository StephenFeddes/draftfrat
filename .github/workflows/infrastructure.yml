name: Deploy Infrastructure

on:
  push:
    branches:
      - main # Change this to your main branch

jobs:
  infrastructure:
    runs-on: ubuntu-latest
    env:
      CLUSTER_NAME: rosterroyale-cluster
      ZONE: us-central1-a
      CLOUDFLARE_API_TOKEN: ${{ secrets.CLOUDFLARE_API_TOKEN }}
      PROJECT_ID: rosterroyale

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Authenticate to Google Cloud
        uses: google-github-actions/auth@v1
        with:
          credentials_json: ${{ secrets.GCP_CREDENTIALS }}
        
      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v1
        with:
          terraform_version: 1.4.5

      - name: Terraform Init
        run: |
          terraform -chdir=apps/backend/terraform init

      - name: Terraform Plan
        run: |
          terraform -chdir=apps/backend/terraform plan -out=tfplan -var "cluster_name=${CLUSTER_NAME}" \
          -var "zone=${ZONE}" -var "cloudflare_api_key=${{ secrets.CLOUDFLARE_API_KEY }}" \
          -var "cloudflare_email=${{ secrets.CLOUD_FLARE_EMAIL }}"

      - name: Terraform Apply
        run: |
          terraform -chdir=apps/backend/terraform apply -auto-approve tfplan
            
      - name: Set up Google Cloud SDK
        uses: google-github-actions/setup-gcloud@v1
        with:
          version: 'latest'

      - name: Install gke-cloud-auth-plugin
        run: |
          gcloud components install gke-gcloud-auth-plugin

      - name: Authenticate to Google Cloud
        uses: google-github-actions/auth@v1
        with:
          credentials_json: ${{ secrets.GCP_CREDENTIALS }}

      - name: Get GKE credentials
        env:
          USE_GKE_GCLOUD_AUTH_PLUGIN: True
        run: |
          gcloud container clusters get-credentials ${CLUSTER_NAME} --zone ${ZONE} --project ${PROJECT_ID}

      - name: Install Helm
        run: curl https://raw.githubusercontent.com/helm/helm/master/scripts/get-helm-3 | bash

      - name: Create namespace
        run: |
          kubectl get namespace prod || kubectl create namespace prod

      - name: Capture LoadBalancer IP
        id: capture_ip
        run: |
          # Capture the static IP using terraform output and use grep to extract only the first valid IP address
          LOADBALANCER_IP=$(terraform -chdir=apps/backend/terraform output -raw static_ip | grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' | head -n 1)
          
          # Ensure we have the correct LoadBalancer IP
          echo "Extracted LoadBalancer IP: $LOADBALANCER_IP"
          
          # Store the result for later steps using the 'outputs' feature
          echo "LOADBALANCER_IP=$LOADBALANCER_IP" >> $GITHUB_OUTPUT

      - name: Install/upgrade helm chart
        run: |
          # Access the captured LoadBalancer IP from previous step
          echo "Using LoadBalancer IP: ${{ steps.capture_ip.outputs.loadbalancer_ip }}"
          
          # Install or upgrade Helm chart using the captured IP
          helm upgrade --install rosterroyale-release-prod apps/backend/kubernetes \
          --set controller.service.loadBalancerIP=${{ steps.capture_ip.outputs.loadbalancer_ip }} \
          --namespace prod