name: Deploy Infrastructure

on:
  push:
    branches:
      - main

jobs:
  infrastructure:
    runs-on: ubuntu-latest
    env:
      CLUSTER_NAME: rosterroyale-cluster
      ZONE: us-central1-a
      CLOUDFLARE_API_TOKEN: ${{ secrets.CLOUDFLARE_API_TOKEN }}
      PROJECT_ID: rosterroyale

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Authenticate to Google Cloud
        uses: google-github-actions/auth@v1
        with:
          credentials_json: ${{ secrets.GCP_CREDENTIALS }}
        
      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v1
        with:
          terraform_version: 1.4.5

      - name: Terraform Init
        run: |
          terraform -chdir=apps/backend/terraform init

      - name: Terraform Plan
        run: |
          terraform -chdir=apps/backend/terraform plan -out=tfplan -var "cluster_name=${CLUSTER_NAME}" \
          -var "zone=${ZONE}" -var "cloudflare_api_key=${{ secrets.CLOUDFLARE_API_KEY }}" \
          -var "cloudflare_email=${{ secrets.CLOUD_FLARE_EMAIL }}"

      - name: Terraform Apply
        id: apply
        run: |
          terraform -chdir=apps/backend/terraform apply -auto-approve tfplan

      - name: Set up Google Cloud SDK
        uses: google-github-actions/setup-gcloud@v1
        with:
          version: 'latest'

      - name: Install gke-cloud-auth-plugin
        run: |
          gcloud components install gke-gcloud-auth-plugin

      - name: Authenticate to Google Cloud
        uses: google-github-actions/auth@v1
        with:
          credentials_json: ${{ secrets.GCP_CREDENTIALS }}

      - name: Get GKE credentials
        env:
          USE_GKE_GCLOUD_AUTH_PLUGIN: True
        run: |
          gcloud container clusters get-credentials ${CLUSTER_NAME} --zone ${ZONE} --project ${PROJECT_ID}

      - name: Set up Helm
        run: |
          curl https://raw.githubusercontent.com/helm/helm/master/scripts/get-helm-3 | bash
    
      - name: Create namespace
        run: |
          kubectl get namespace prod || kubectl create namespace prod

      - name: Helm Install/Upgrade
        run: |
          echo "Retrieving Static IP from Terraform..."
          STATIC_IP=$(cd apps/backend/terraform && terraform output -raw static_ip)
          echo "Static IP from Terraform Apply: ${STATIC_IP}"

          if [ -z "$STATIC_IP" ]; then
            echo "Error: STATIC_IP is empty."
            exit 1
          fi

          echo "Running Helm upgrade with the following parameters:"
          echo "Release Name: rosterroyale-release-prod"
          echo "Chart Path: apps/backend/kubernetes"
          echo "Values File 1: apps/backend/kubernetes/values.yaml"
          echo "Values File 2: apps/backend/kubernetes/values-prod.yaml"
          echo "Namespace: prod"
          echo "LoadBalancerIP: ${STATIC_IP}"

          helm upgrade --install rosterroyale-release-prod apps/backend/kubernetes \
          --values apps/backend/kubernetes/values.yaml \
          -f apps/backend/kubernetes/values-prod.yaml \
          -n prod \
          --set loadBalancerIP=${STATIC_IP}